# Use the default network olog_default.
version: "3.7"
services:

  fe-olog-service:
    image: ghcr.io/olog/org-phoebus-service-olog:latest
    ports:
      - "8080:8080"
      - "8181:8181"
    depends_on:
      - fe-olog-mongo
      - fe-olog-elastic
    environment:
      elasticsearch.network.host: fe-olog-elastic
      mongo.host: fe-olog-mongo
      elasticsearch.cluster.name: fe-olog-elastic-cluster
      elasticsearch.index.create.timeout: 5m
      elasticsearch.index.create.master_timeout: 5m
      elasticsearch.http.keep_alive_timeout_ms: "300000"
      elasticsearch.http.socket_timeout_ms: "300000"

    # Ensure that the elastic server is up before starting olog.
    command: >
      /bin/bash -c "
          while ! curl -s -f fe-olog-elastic:9200/_cluster/health?wait_for_status=green;
        do
          echo Waiting for Elasticsearch;
          sleep 1;
        done;
        java -jar service-olog-*.jar --spring.config.name=application-docker
      "

  fe-olog-mongo:
    image: mongo
    ports:
      - 27017:27017
    volumes:
      - fe-olog-mongo-data:/etc/mongo

  fe-olog-elastic:
    image: elasticsearch:8.2.3
    environment:
      cluster.name: fe-olog-elastic-cluster
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      xpack.security.enabled: "false"
      xpack.security.http.ssl.enabled: "false"
      ingest.geoip.downloader.enabled: "false"
    ports:
      - 9200:9200
    volumes:
      - fe-olog-elastic-data:/usr/share/elasticsearch/data
    ulimits:
      memlock:
        soft: -1
        hard: -1

# Configure persistent storage for mongo and elastic.
volumes:
  fe-olog-elastic-data:
    driver: local
  fe-olog-mongo-data:
    driver: local
